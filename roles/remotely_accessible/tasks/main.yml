---
- name: Verify admin password is provided
  fail: msg="admin_password must be set"
  when: admin_password is undefined

- name: Verify admin authorized keys are provided
  fail: msg="admin_authorized_githubbers must contain at least one GitHub username"
  when: admin_authorized_githubbers|length == 0

- name: Encrypt password for {{admin_user}}
  command: 'openssl passwd -salt $(openssl rand -base64 32) -1 ''{{admin_password}}'''
  register: encrypted_admin_password

- name: Add {{admin_user}} user
  user:
    name: '{{admin_user}}'
    shell: /bin/bash
    password: '{{encrypted_admin_password.stdout}}'

- name: Download authorized keys from GitHub for {{admin_user}}
  connection: local
  get_url:
    src: https://github.com/{{item}}.keys
    dest: /tmp/github.{{item}}.keys
  with_items: '{{admin_authorized_githubbers}}'

- name: Install authorized keys for {{admin_user}}
  authorized_key:
    user: '{{admin_user}}'
    key: "{{lookup('file', '/tmp/github.' + item + '.keys')}}"
  with_items: '{{admin_authorized_githubbers}}'

- name: Grant {{admin_user}} sudo privileges
  lineinfile:
    dest: /etc/sudoers
    regexp: '{{admin_user}} ALL'
    line: '{{admin_user}} ALL=(ALL) ALL'
    state: present

- name: Revoke sudo group from sudoers
  lineinfile:
    dest: /etc/sudoers
    regexp: ^%sudo
    state: absent

- name: Disable root login (log in using {{admin_user}})
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^PermitRootLogin
    line: PermitRootLogin no
    state: present
  notify: Restart SSH

- name: Disable password auth
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^PasswordAuthentication
    line: PasswordAuthentication no
    state: present
  notify: Restart SSH
